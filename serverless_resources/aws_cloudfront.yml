Resources:

  S3BucketAppFrontDistribution:
    Type: AWS::CloudFront::Distribution
    DependsOn:
      - S3BucketApp
    Properties:
      DistributionConfig:
        Comment: Cloudfront Distribution pointing to S3 bucket
        Origins:
          - DomainName: !Select [ 2, !Split [ "/", !GetAtt S3BucketApp.WebsiteURL ] ]
            Id: S3Origin
            CustomOriginConfig:
              HTTPPort: '80'
              HTTPSPort: '443'
              OriginProtocolPolicy: http-only
        Enabled: true
        HttpVersion: 'http2'
        DefaultRootObject: index.html
        CustomErrorResponses:
          - ErrorCode: 404
            ErrorCachingMinTTL: 10
            ResponseCode: 200
            ResponsePagePath: /index.html
          - ErrorCode: 403
            ErrorCachingMinTTL: 10
            ResponseCode: 200
            ResponsePagePath: /index.html
        Aliases:
          - '${self:custom.cloudFrontDomainName}'
        DefaultCacheBehavior:
          AllowedMethods:
            - GET
            - HEAD
          Compress: true
          TargetOriginId: S3Origin
          ForwardedValues:
            QueryString: true
            Cookies:
              Forward: none
          ViewerProtocolPolicy: redirect-to-https
        ViewerCertificate:
          AcmCertificateArn: ${self:custom.cloudFrontAcmCertificateArn}
          SslSupportMethod: sni-only

  WebsiteDNSName:
    Type: AWS::Route53::RecordSetGroup
    Properties:
      HostedZoneName: '${self:custom.route53DomainName}.'
      RecordSets:
      - Name: '${self:custom.cloudFrontDomainName}'
        Type: A
        AliasTarget:
          HostedZoneId: ${self:custom.cloudFrontHostedZoneId}
          DNSName: !GetAtt [S3BucketAppFrontDistribution, DomainName]

# ======================================================================================================================
# [OUTPUTS] INFORMATION > Log information
# ======================================================================================================================
Outputs:
  S3BucketAppFrontDistributionOutput:
    Value:
      'Fn::GetAtt': [S3BucketAppFrontDistribution, DomainName]